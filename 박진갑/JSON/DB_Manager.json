Unload Req일때 Port의 bottle id 저장필요


============================================================================ 
file name   : DB_Manager.json
author      : JK Park
desc   
   1.    2024-06-01 최초생성
   2.    2024-06-19 bottle 1개씩 작업하는 것이 아니라 작업의뢰단위(Pack)에 따라 반송및 작업수행


관련 Token List

101. Bottle 반출입기에서 공병Zone에 Bottle 수량요청              ReqRealBottleCountAtInOutBotMach
102. Bottle 반출입기에서 실병Zone에 Bottle 수량요청              ReqEmptyBottleCountAtInOutBotMach
103. Bottle 반출입기에서 실병 착공보고                          ReportLoadingRealBottleAtInOutBotMach
104. Bottle 반출입기에서 실병 완공(입고완료)보고                    ReportLoadCompRealBottleAtInOutBotMach
105. 반출입기에서 적정 Empty Bottle을 추출한다                   ExtractSuitableEmptyBottleAtInOutBotMach
106. 반출입기에서 적정 Real Bottle을 추출한다                    ExtractSuitableRealBottleAtInOutBotMach
107. 의뢰수량에 대한 일괄처리를 위한 MemberOfBottlePack Set       SetMemberOfBottlePack
107. 의뢰수량에 대한 일괄처리를 위한 MemberOfBottlePack Reset     ResetMemberOfBottlePack

201. Stocker에서 hole capacity(Bottle 적재수량)               GetBottleCapacityOfStocker
202. Stocker에 bottle 적재할 충분한 공간이 있는지 확인한다           CheckLoadingableHoleCapaAtStocker

301. 분석기가 작업가능여부 사전 확인한다                            CheckRunableStatusAtAnalysis

401. MOMA 작업가능여부 사전 확인한다                            CheckRunableStatusAtMOMA
402  MOMA 장비상태를 reserve 변경                            ChangeMOMA_Status2Reserve ChangeEqpStatus2Reserve

901. 입고요청(LoadReq)                                      LoadRequest
902. 입고완료(착공-LoadComp)                                  LoadComp
903. 출하요청(UnloadReq)                                    UnloadRequest
904. 출하완료(완공-UnloadComp)                                UnloadComp
905. 장비반송 사전예약                                          ReserveEqpPort4Dispatch
906. Process상태변경                                        ChangeProcessStatus
907. 장비상태변경                                             ChangeEqpStatus
908. 특정장비(분석기,stocker)상태요청                            ReqAnalysisEqpStatus
909. 모든 장비상태요청                                          ReqAllEqpStatus
910. Bottle정보 수동변겅                                      ChangeBottleStatus
911. 반출입기에서 공 Bottle 수량요청                              GetCountEmptyBottleAtInOutBottle
912. 설비내 Bottle 정보요청                                    ReqBottleInfoFmEqp
913. 모든 Bottle 정보요청                                     ReqAllBottlesInfo
914. 작업대기중인 Bottle 정보요청                                 InputWaitingBottleInfoFmEqp
915. Bottle 공정이력정보 요청                                   Req4BottleProcessHistory
916. stocker내에 반송우선순위 bottle 확인                         CheckTopPriorityBottle
917. 반송Event 있는지 확인                                     CheckTransferEvent
//16. 공 Bottle 반출지시                                     OutEmptyBottle
suitable bottle

Normal Sequence Flow
1-1 Bottle반출입기(신규)    '공 Bottle 반출요청'수신                                 UI Or LIMS에서 요청
    1) 사전에 출하가능한지 확인. 즉 요청한 수량을 출하하기 위한 충분한 수량 있는지 확인
       (1) Bottle 반출입기에서 공병Zone에 Bottle 수량요청 (#101)
       (2) 요청수량과 공병수량 비교판단후 반출입기 컨트롤러에서 수량저장
    2) 출하가능하면 아래수행, 불가능하면 지정시간 sleep후 재호출. 지정 최대대기시간 초과하면 alarm.
    3) Bottle반출입기 Controller에서 반출입기 설비에 적정 Empty Bottle 출하지시 (#105)
    4) 요청한 Bottle Unload-2 Port에 도착후 작업자가 끄집어내면 LoadReq (#901)          분석실 외부공간쪽 반출입기 Unload Port에 공 Bottle 반출 (반출입기 작업자공간쪽 Port에서, OperID=1)
    5) Unload-2 Port에서 LoadReq 수신후 작업자 요청수량내에서 3)번 호출 반복
1-2 작업자                                                                     시료채취
1-3 작업자                입고완료(착공-LoadComp)                                분석실 외부공간쪽 반출입기 Load Port 실 Bottle 최초투입(OperID=3)
1-4 Bottle반출입기          실병Zone hole에서 투입대기                                  분석실 외부공간쪽 반출입기 Load Port 실 Bottle 최초투입(OperID=3)
1-5 Bottle반출입기         Unload_1 Port에서 입고요청(LoadReq)                        분석실 내부공간쪽 반출입기 Unload Port 실 Bottle Load요청 (반출입기 실험실공간쪽 Unload Port에서, OperID=4)
    1) 사전에 반송가능한지 확인. 즉 분석기에서 작업가능한지, Stocker에 공간이 충분한지 확인한다
       (1) 분석기가 작업가능여부 사전 확인한다 (#301)
       (2) Stocker에 bottle 적재할 충분한 공간이 있는지 확인한다 (#202)
       (3) MOMA 작업가능한 상태인지 확인한다. (#401)
    2) 반송가능하면 아래수행, 불가능하면 지정시간 sleep후 재호출. 지정 최대대기시간 초과하면 alarm.
    3) MOMA에게 반출입기 Unload Port_1 위치로 이동지시
	   - MOMA에서 token 정의
    4) 사전에 Bottle반출입기에서 MOMA로 bottle 이동 가능한지 확인.
       - MOMA unload_1 port도착했는지 확인
    5) 이동가능햐면 아래수행, 불가능하면 지정시간 sleep후 재호출. 지정 최대대기시간 초과하면 alarm.
	6) MOMA 상태를 reserve로 변경 (#402)
    7) 반출입기 설비에 적정 Real Bottle 추출지시 (#106)
       - 나머지 의뢰수량(Pack수량) 일괄처리 인출을 위하여 MemberOfBottlePack field값을 set한다.
       - 의뢰수량에 대한 일괄처리를 위한 MemberOfBottlePack Set (#107)
    8) 요청한 Bottle Unload-1 Port에 도착후                                        분석실 외부공간쪽 반출입기 Unload Port에 공 Bottle 반출 (반출입기 작업자공간쪽 Port에서, OperID=1)
    9) Bottle반출입기에서 MOMA로 bottle 이동   
	   - MOMA에서 token 정의
       - unload comp후 의뢰수량에 대한 일괄처리를 위한 MemberOfBottlePack Reset (#108)
   10) Unload-1 Port에서 LoadReq 수신후 Pack 수량만큼 6)번 호출 반복
1-6 Bottle반출입기         출하완료(완공-UnloadComp)
1-7 Bottle반출입기         입고완료(착공-LoadComp)                                분석실 내부공간쪽 반출입기 Load Port에 세정후 재사용을 위하여 공 Bottle 투입(OperID=5, /w BottleID)
1-8 Bottle반출입기         입고요청(LoadReq)                                    분석실 내부공간쪽 반출입기 Load Port에서

2-1 Stocker             입고완료(착공-LoadComp)                                   Stocker 위치정보보고
2-2 Stocker(신규)         출하지시수신                                              Dispatcher가 우선순위에 따라 Stocker내 Bottle에 대한 출하요청
2-3 Stocker             출하요청(UnloadReq)                                     Unload Port에 도착
2-4 Stocker             출하완료(완공-UnloadComp)
2-5 Stocker             입고요청(LoadReq)

3-1 분석기                 입고완료(착공-LoadComp)       
3-2 분석기                 장비상태변경(분석시작)                                Idle --> Run  Waiting 추가
3-3 분석기                                                             분석작업       
3-4 분석기                 장비상태변경(분석종료)                                Run --> Idle
3-5 분석기                 출하요청(UnloadReq)           
3-6 분석기                 출하완료(완공-UnloadComp)
3-7 분석기                 입고요청(LoadReq)

4-1 이동형협업로봇(신규)         GripBottle                Gripper가 Bottle 잡은경우, UI화면에 동작표시
4-1 이동형협업로봇(신규)         MovingBottle              이동중
4-1 이동형협업로봇(신규)         ReleaseBottle             Gripper가 Bottle 내려놓은 경우

============================================================================ 

1. 입고요청(LoadReq)
   1) Token : LoadRequest
   2) 관련 controller : Bottle 반출입기, 분석기, Stocker, 폐기설비
                      UI에서 수동변경
   3) Body
      { 
         "EqpGroupID" : "1",
         "EqpSeqNo" : "1"
      } Or
      { 
         "EqpGroupID" : "1",
         "EqpSeqNo" : "1",
         "ProcessStatus" : "LoadReq"
      }      
   4) Function : tMstEqp table의 ProcessStatus(진행상태) 변경
   5) Return Message 길이 : 1K 이내
   6) 관련 Stored Procedure : UpdateEqpProcessStatus
   7) Return
      { 
         "status_code" : 200,
         "sender_controller" : "DB_Manager",    // 반출입기, Dispatcher, 분석기
         "error_msg" : "None"
      }      

2. 입고완료(착공-LoadComp)
   1) Token : LoadComp
   2) 관련 controller : Bottle 반출입기, 분석기, Stocker, 폐기설비
                      UI에서 수동변경
   3) Body
      { 
         "EqpGroupID" : "1",
         "EqpSeqNo" : "1",
         "OperID" : "3",
         "BottleID" : "Bot20240602"
      } Or 
      { 
         "EqpGroupID" : "1",
         "EqpSeqNo" : "1",
         "BottleID" : "Bot20240602",
         "ProcessStatus" : "LoadComp"
      }      
   4) Function : tMstEqp table의 ProcessStatus(진행상태) 변경
   5) Return Message 길이 : 1K 이내
   6) 관련 Stored Procedure : ProcessLoadUnloadCompletion
   7) Return
      { 
         "status_code" : 200,
         "sender_controller" : "DB_Manager",
         "error_msg" : "None"
      }  

3. 출하요청(UnloadReq)
   1) Token : UnloadRequest
   2) 관련 controller : Bottle 반출입기, 분석기, Stocker, 폐기설비
                      UI에서 수동변경
   3) Body
      { 
         "EqpGroupID" : "1",
         "EqpSeqNo" : "1",
         "BottleID" : "Bot20240602"
      } Or 
      { 
         "EqpGroupID" : "1",
         "EqpSeqNo" : "1",
         "BottleID" : "Bot20240602",
         "ProcessStatus" : "UnloadReq"
      }      
   4) Function : tMstEqp table의 ProcessStatus(진행상태) 변경
   5) Return Message 길이 : 1K 이내
   6) 관련 Stored Procedure : UpdateEqpProcessStatus
   7) Return
      { 
         "status_code" : 200,
         "sender_controller" : "DB_Manager",
         "error_msg" : "None"
      }      

4. 출하완료(착공-UnloadComp)
   1) Token : UnloadComp
   2) 관련 controller : Bottle 반출입기, 분석기, Stocker, 폐기설비
                      UI에서 수동변경
   3) Body
      { 
         "EqpGroupID" : "1",
         "EqpSeqNo" : "1",
         "OperID" : "1",
         "BottleID" : "Bot20240602"
      } Or 
      { 
         "EqpGroupID" : "1",
         "EqpSeqNo" : "1",
         "BottleID" : "Bot20240602",
         "ProcessStatus" : "UnloadComp"
      }      
   4) Function : tMstEqp table의 ProcessStatus(진행상태) 변경
   5) Return Message 길이 : 1K 이내
   6) 관련 Stored Procedure : ProcessLoadUnloadCompletion
   7) Return
      { 
         "status_code" : 200,
         "sender_controller" : "DB_Manager",
         "error_msg" : "None"
      } 


5. 장비반송 사전예약, 다른 Process에서 해당장비 반송을 못하도록 하기 위함
   Dispatcher에서 To Position 정해지면 To Position을 Reserve한다.
   1) Token : ReserveEqpPort4Dispatch
   2) 관련 controller : Dispatcher
                      UI에서 수동변경
   3) Body
      { 
         "EqpGroupID" : "1",
         "EqpSeqNo" : "1"
      } Or 
      { 
         "EqpGroupID" : "1",
         "EqpSeqNo" : "1",
         "ProcessStatus" : "Reserve"       -- Next Eqp 상태를 Reserver 변경함
      }      
   4) Function : tMstEqp table의 ProcessStatus(진행상태)를 변경
   5) Return Message 길이 : 1K 이내
   6) 관련 Stored Procedure : UpdateEqpProcessStatus
   7) Return
      { 
         "status_code" : 200,
         "sender_controller" : "DB_Manager",
         "error_msg" : "None"
      } 

6. Process상태변경
   LoadRequest, LoadComp, UnloadRequest, UnloadComp 통합하는 것도 가능
   1) Token : ChangeProcessStatus
   2) 관련 controller : Bottle 반출입기, 분석기, Stocker, 폐기설비
                      UI에서 수동변경     
   3-2) Body 
      { 
         "EqpGroupID" : "2",
         "EqpSeqNo" : "1",
         "BottleID" : "Bot20240602",
         "EqpStatus" : "Run" 
      }    
   4) Function : tMstEqp table의 EqpStatus(장비상태) 변경
   5) Return Message 길이 : 1K 이내
   6) 관련 Stored Procedure : 
   7) Return
      { 
         "status_code" : 200,
         "sender_controller" : "DB_Manager",
         "error_msg" : "None"
      } 
      
7. 장비상태변경
   1) Token : ChangeEqpStatus
   2) 관련 controller : Bottle 반출입기, 분석기, Stocker, 폐기설비
                      UI에서 수동변경     
   3-2) Body 
      { 
         "EqpGroupID" : "2",
         "EqpSeqNo" : "1",
         "EqpStatus" : "Run" 
      }    
   4) Function : tMstEqp table의 EqpStatus(장비상태) 변경
   5) Return Message 길이 : 1K 이내
   6) 관련 Stored Procedure : UpdateEqpStatus
   7) Return
      { 
         "status_code" : 200,
         "sender_controller" : "DB_Manager",
         "error_msg" : "None"
      }      
      
8. 특정장비(분석기)상태요청
   1) Token : ReqAnalysisEqpStatus
   2) 관련 controller : Dispatch,
                      UI
   3) Body
      { 
         "EqpGroupID" : "2",
         "EqpSeqNo" : "1",
      }      
   4) Function : tMstEqp table의 EqpStatus(장비상태) 요청
   5) Return Message 길이 : 1K 이내
   6) 관련 Stored Procedure : RetrieveEquipmentStatus
   7) Return
      { 
         "status_code" : 200,                   -- 요청에 대한 응답이 정상일때, 비정일때는 200 이외 수치
         "sender_controller" : "DB_Manager",    -- 고정
         "eqp_status" : "Run",
         "process_status" : "UnloadReq",
         "error_msg" : "None"
      } 
9. 장비상태요청
   1) Token : ReqAllEqpStatus
   2) 관련 controller : Dispatch,
                      UI
   3) Body
      { 
         None
      }      
   4) Function : tMstEqp table의 모든 EqpStatus(장비상태) 요청
   5) Return Message 길이 : 1K 이내
   6) 관련 Stored Procedure : RetrieveAllEquipmentStatuses
   7) Return
      { 
         "status_code" : 200,
         "sender_controller" : "DB_Manager",
         "total_cnt_of_eqp" : 5,
         "eqp_status" : [
            { "No_1" : {
                 "EqpGroupID" : "1", "EqpSeqNo" : "1", "ProcessStatus":"UnloadReq", "EqpStatus" : "Idle"}
            },
            { "No_2" : {
                 "EqpGroupID" : "2", "EqpSeqNo" : "1", "ProcessStatus":"Idle","EqpStatus" : "Run"}
            },
            ...
            { "No_5" : {
                 "EqpGroupID" : "5", "EqpSeqNo" : "1", "ProcessStatus":"LoadComp","EqpStatus" : "Idle"}
            }
         ],
         "error_msg" : "None"
      } 
      

10. Bottle정보 수동변겅
   1) Token : ChangeBottleStatus
   2) 관련 controller : UI
   3) Body
      { 
         "EqpGroupID" : "1",
         "EqpSeqNo" : "1",
         "OperID" : "1"
         "NextEqpGroupID" : "1",
         "NextOperID" : "1"
      } 
   4) Function : UI화면에서 수동으로 tProcBottle table 공정정보를 변경할때 사용
   5) Return Message 길이 : 1K 이내
   6) 관련 Stored Procedure : UpdateBottleStatus
   7) Return
      { 
         "status_code" : 200,
         "sender_controller" : "DB_Manager",    // 반출입기, Dispatcher, 분석기     
         "error_msg" : "None"
      }  
      
11. 반출입기에서 공 Bottle 수량요청   
    반출입기에서 출하할 공 Bottle 있는지 확인한다
   1) Token : GetCountEmptyBottleAtInOutBottle
   2) 관련 controller : UI
   3) Body
      {
         "CurrEqpGroupID" : "1",
         "CurrEqpSeqNo" : "1"         
      } 
   4) Function : tProcBottle table의 CurrEqpGroupID=1, CurrOperID=1인 Bottle 수량을 구한다
   5) Return Message 길이 : 1K 이내
   6) 관련 Stored Procedure : RetrieveEmptyBottleCount
   7) Return
      { 
         "status_code" : 200,
         "sender_controller" : "DB_Manager",    // 반출입기, Dispatcher, 분석기
         "total_cnt_of_empty_bottle" : 10,      // record 수량
         "error_msg" : "None"
      } 
      
12. 설비내 Bottle 정보요청
    UI화면에서 반출입기 설비에 추출가능한 빈병정보를 확인한다.
   1) Token : ReqBottleInfoFmEqp
   2) 관련 controller : Dispatch,
                      UI
   3) Body
      { 
         "EqpGroupID" : "1",
         "EqpSeqNo" : "1"
      } 
   4) Function : tProcBottle table의 BottleID, EqpStatus, ProcessStatus... 가져온다
   5) Return Message 길이 : 1K 이상, 길이 제한에 따른 호출 불가할 경우 Controller에 sp 직접 호출필요
   6) 관련 Stored Procedure : FetchBottleStatusFmEquipment
   7) Return
      { 
         "status_code" : 200,
         "sender_controller" : "DB_Manager",    // 반출입기, Dispatcher, 분석기
         "total_cnt_of_eqp" : 70,
         "eqp_status" : [
            { "No_1" : {
                 "BottleID" : "Bot_001", "ExperimentRequestName" : "홍길동", "CurrLiquid":"Acid", "RequestDate" : "2024-06-05", "DispatchingPriority":1, "Position":"0110", "EventTime" : "2024-06-05"}
            },
            { "No_2" : {
                 "BottleID" : "Bot_002", "ExperimentRequestName" : "심봉사", "ProcessStatus":"Base","RequestDate" : "2024-06-06", "DispatchingPriority":9, "Position":"0001", "EventTime" : "2024-06-05"}
            },
            ...
            { "No_70" : {
                 "BottleID" : "Bot_070", "ExperimentRequestName" : "이몽룡", "ProcessStatus":"Organic","RequestDate" : "2024-06-07", "DispatchingPriority":5, "Position":"0105", "EventTime" : "2024-06-05"}
            }
         ],      
         "error_msg" : "None"
      } 
      
13. 모든 Bottle 정보요청
   1) Token : ReqAllBottlesInfo
   2) 관련 controller : Dispatch,
                      UI
   3) Body
      { 
         None
      } 
   4) Function : tProcBottle table의 BottleID, EqpStatus, ProcessStatus... 가져온다
   5) Return Message 길이 : 1K 이상, 길이 제한에 따른 호출 불가할 경우 Controller에 sp 직접 호출필요
   6) 관련 Stored Procedure : RetrieveAllBottleStatuses
   7) Return
      { 
         "status_code" : 200,
         "sender_controller" : "DB_Manager",    // 반출입기, Dispatcher, 분석기
         "total_cnt_of_eqp" : 300,
         "eqp_status" : [
            { "No_1" : {
                 "EqpGroupID" : "1", "EqpSeqNo" : "1", "BottleID" : "Bot_001", "ExperimentRequestName" : "홍길동", "CurrLiquid":"Acid", "RequestDate" : "2024-06-05", "DispatchingPriority":1, "Position":"0110", "EventTime" : "2024-06-05"}
            },
            { "No_2" : {
                 "EqpGroupID" : "2", "EqpSeqNo" : "1", "BottleID" : "Bot_002", "ExperimentRequestName" : "심봉사", "ProcessStatus":"Base","RequestDate" : "2024-06-06", "DispatchingPriority":9, "Position":"0001", "EventTime" : "2024-06-05"}
            },
            ...
            { "No_300" : {
                 "EqpGroupID" : "3", "EqpSeqNo" : "1", "BottleID" : "Bot_090", "ExperimentRequestName" : "이몽룡", "ProcessStatus":"Organic","RequestDate" : "2024-06-07", "DispatchingPriority":5, "Position":"0105", "EventTime" : "2024-06-05"}
            }
         ],      
         "error_msg" : "None"
      } 
      
14. 작업대기중인 Bottle 정보요청. 분석기에서 의미 있음
    UI화면 분석기 설비 모니터링 화면에 분석기 투입대기중인 수량과 관련정보 표시(즉, 반출입기 Or Stocker에서 Next 공정이 분석기인 경우) 
   1) Token : InputWaitingBottleInfoFmEqp
   2) 관련 controller : UI
   3) Body
      { 
         "NextEqpGroupID" : "2",
         "NextOperID" : "1"
      } 
   4) Function : tProcBottle table의 NextEqpGroupID의 BottleID, EqpStatus, ProcessStatus... 가져온다
   5) Return Message 길이 : 1K 이내
   6) 관련 Stored Procedure : RetrievePendingBottles
   7) Return
      { 
         "status_code" : 200,
         "sender_controller" : "DB_Manager",    // 반출입기, Dispatcher, 분석기
         "total_cnt_of_eqp" : 5,
         "eqp_status" : [
            { "No_1" : {
                 "BottleID" : "Bot_001", "ExperimentRequestName" : "홍길동", "CurrLiquid":"Acid", "RequestDate" : "2024-06-05", "DispatchingPriority":1, "Position":"0110", "EventTime" : "2024-06-05"}
            },
            { "No_2" : {
                 "BottleID" : "Bot_002", "ExperimentRequestName" : "심봉사", "ProcessStatus":"Base","RequestDate" : "2024-06-06", "DispatchingPriority":9, "Position":"0001", "EventTime" : "2024-06-05"}
            },
            ...
            { "No_5" : {
                 "BottleID" : "Bot_090", "ExperimentRequestName" : "이몽룡", "ProcessStatus":"Organic","RequestDate" : "2024-06-07", "DispatchingPriority":5, "Position":"0105", "EventTime" : "2024-06-05"}
            }
         ],      
         "error_msg" : "None"
      } 


15. Bottle 공정이력정보 요청        
   1) Token : Req4BottleProcessHistory
   2) 관련 controller : UI
   3) Body
      {
         "BottleID" : "Bot_001"
      } 
   4) Function : tProcBottle table의 CurrEqpGroupID=1, CurrOperID=1인 Bottle 수량을 구한다
   5) Return Message 길이 : 1K 이내
   6) 관련 Stored Procedure : FetchBottleProcessHistory
   7) Return
      { 
         "status_code" : 200,
         "sender_controller" : "DB_Manager",    // 반출입기, Dispatcher, 분석기
         "total_cnt_of_process" : 5,            // record 수량
         "process_of_bottle" : [
            { "No_1" : {
                 "EqpGroupID" : "1", "OperID" : "2", "StartTime" : "2024-06-05", "EndTime" : "2024-06-05", "DispatchingPriority":1, "Position":"0110"}
            },
            { "No_2" : {
                 "EqpGroupID" : "2", "OperID" : "1", "StartTime" : "2024-06-06", "EndTime" : "2024-06-05", "DispatchingPriority":9, "Position":"0001"}
            },
            ...
            { "No_5" : {
                 "EqpGroupID" : "5", "OperID" : "1", "StartTime" : "2024-06-07", "EndTime" : "2024-06-05", "DispatchingPriority":5, "Position":"0105"}
            }
         ],          "error_msg" : "None"
      } 

16. stocker내에 반송우선순위 bottle 확인
   1) Token : CheckTopPriorityBottle
   2) 관련 controller : Dispatch
   3) Body
      { 
         "CurrEqpGroupID" : "3",
         "CurrEqpSeqNo" : "1",
         "NextEqpGroupID" : "3,
         "NextEqpSeqNo" : "1"
      } 
   4) Function : stocker내에 반송우선 bottle(기준 5) 있는지 확인하고, 
        stocker내에 bottle 우선순위, 입고순서로 sotting하여 해당 bottle 정보 출력
      반송우선절차 (ex:bottle 반출입기에서 unload request 발생시)
         (1) 분석기 장비상태가 idle인지 확인
             if idle 
                if stocker내에 작업우선순위 bottle 있는 경우는 bottle을 stocker에 입고
                else (즉, unload request 요청한 bottle의 우선순위가 높은경우) 분석기로 바로 이동
             if run
                분석기로 바로 이동
                지 확인하고 우선순위 bottle 있을때는 stocker에 입고
         (2) stocker Load port 상태가 "LoadReq"인지 확인
             if LoadReq 
                stocker 이동
             else (ex:Reserve)
                event driven 방식일때 event queue등에 저장후 event 재귀호출등
                time polling 병행일때 next time에 다시 수행       
   5) Return Message 길이 : 1K 이내
   6) 관련 Stored Procedure : GetTopPriorityBottle
   7) Return
      { 
         "status_code" : 200,
         "sender_controller" : "DB_Manager",    // 반출입기, Dispatcher, 분석기   
         "top_priority_of_bottle" : 9,
         "bottle_id" : "bot_001"      
      }

16. 공 Bottle 반출지시 ?
   1) Token : OutEmptyBottle
   2) 관련 controller : Dispatch,
                      UI
   3) Body
      { 
         "EqpGroupID" : "1",
         "EqpSeqNo" : "1",
         "OperID" : "1"
      } 
   4) Function : 공정진행(완공)에 따라 tProcBottle table Bottle 정보를 Next 공정으로 변경한다.
                 tProcBotOper 공정진행정보 record 추가 생성한다.
   5) Return Message 길이 : 1K 이내
   6) 관련 Stored Procedure : 
   7) Return
      { 
         "status_code" : 200,
         "sender_controller" : "DB_Manager",    // 반출입기, Dispatcher, 분석기     
         "error_msg" : "None"
      } 


